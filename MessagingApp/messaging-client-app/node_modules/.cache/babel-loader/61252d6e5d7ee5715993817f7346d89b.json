{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/home/ag/Fontys/IT/tickiesystem/MessagingApp/messaging-client-app/src/Components/Messaging.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect } from 'react';\nimport TextField from '@material-ui/core/TextField';\nimport Paper from '@material-ui/core/Paper';\nimport { makeStyles } from '@material-ui/core/styles';\nlet stompClient = null;\n\nconst onConnected = () => {\n  // Subscribing to the public topic\n  stompClient.subscribe('/topic/pubic', onMessageReceived()); // Registering user to server as a public chat user\n\n  stompClient.send(\"/app/addUser\", {}, JSON.stringify({\n    sender: \"test\",\n    message: 'JOIN'\n  }));\n};\n\nconst connect = userName => {\n  userName = \"test\";\n\n  if (userName) {\n    const Stomp = require('stompjs');\n\n    let SockJS = require('sockjs-client');\n\n    SockJS = new SockJS('http://localhost:8080/ws');\n    stompClient = Stomp.over(SockJS);\n    console.log(stompClient);\n    stompClient.connect({}, onConnected, onError);\n  }\n};\n\nconst onError = error => {\n  this.setState({\n    error: 'Could not connect you to the Chat Room Server. Please refresh this page and try again!'\n  });\n};\n\nconst useStyles = makeStyles(theme => ({\n  container: {\n    margin: theme.spacing(3),\n    minWidth: 120,\n    boxSizing: 'border-box',\n    height: '90vh'\n  },\n  textField: {\n    position: \"relative\",\n    float: \"right\",\n    top: \"84vh\",\n    width: '100%'\n  }\n}));\n\nconst onMessageReceived = payload => {//let message = JSON.parse(payload.body);\n  //console.log(message);\n};\n\nexport default function Messaging() {\n  _s();\n\n  useEffect(() => {\n    connect(\"test\");\n  });\n  const classes = useStyles();\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(Paper, {\n      elevation: 3,\n      className: classes.container,\n      children: /*#__PURE__*/_jsxDEV(TextField, {\n        className: classes.textField,\n        id: \"filled-basic\",\n        label: \"Filled\",\n        variant: \"filled\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 81,\n    columnNumber: 9\n  }, this);\n}\n\n_s(Messaging, \"v7TDUGheAkBmKIQo9Gj65jeexyQ=\", false, function () {\n  return [useStyles];\n});\n\n_c = Messaging;\n\nvar _c;\n\n$RefreshReg$(_c, \"Messaging\");","map":{"version":3,"sources":["/home/ag/Fontys/IT/tickiesystem/MessagingApp/messaging-client-app/src/Components/Messaging.jsx"],"names":["React","useEffect","TextField","Paper","makeStyles","stompClient","onConnected","subscribe","onMessageReceived","send","JSON","stringify","sender","message","connect","userName","Stomp","require","SockJS","over","console","log","onError","error","setState","useStyles","theme","container","margin","spacing","minWidth","boxSizing","height","textField","position","float","top","width","payload","Messaging","classes"],"mappings":";;;;;AAAA,OAAOA,KAAP,IAAeC,SAAf,QAA+B,OAA/B;AACA,OAAOC,SAAP,MAAsB,6BAAtB;AACA,OAAOC,KAAP,MAAkB,yBAAlB;AACA,SAASC,UAAT,QAA2B,0BAA3B;AAIA,IAAIC,WAAW,GAAG,IAAlB;;AAEA,MAAMC,WAAW,GAAG,MAAM;AAExB;AACAD,EAAAA,WAAW,CAACE,SAAZ,CAAsB,cAAtB,EAAsCC,iBAAiB,EAAvD,EAHwB,CAKxB;;AACAH,EAAAA,WAAW,CAACI,IAAZ,CAAiB,cAAjB,EAAiC,EAAjC,EAAqCC,IAAI,CAACC,SAAL,CAAe;AAAEC,IAAAA,MAAM,EAAE,MAAV;AAAiBC,IAAAA,OAAO,EAAC;AAAzB,GAAf,CAArC;AAED,CARD;;AAUA,MAAMC,OAAO,GAAIC,QAAD,IAAc;AAE1BA,EAAAA,QAAQ,GAAG,MAAX;;AAEA,MAAIA,QAAJ,EAAc;AAEZ,UAAMC,KAAK,GAAGC,OAAO,CAAC,SAAD,CAArB;;AAEA,QAAIC,MAAM,GAAGD,OAAO,CAAC,eAAD,CAApB;;AAEAC,IAAAA,MAAM,GAAG,IAAIA,MAAJ,CAAW,0BAAX,CAAT;AAEAb,IAAAA,WAAW,GAAGW,KAAK,CAACG,IAAN,CAAWD,MAAX,CAAd;AAEAE,IAAAA,OAAO,CAACC,GAAR,CAAYhB,WAAZ;AAEAA,IAAAA,WAAW,CAACS,OAAZ,CAAoB,EAApB,EAAwBR,WAAxB,EAAqCgB,OAArC;AAED;AACF,CAnBH;;AAsBE,MAAMA,OAAO,GAAIC,KAAD,IAAW;AACzB,OAAKC,QAAL,CAAc;AACZD,IAAAA,KAAK,EAAE;AADK,GAAd;AAGD,CAJD;;AAMF,MAAME,SAAS,GAAGrB,UAAU,CAAEsB,KAAD,KAAY;AACrCC,EAAAA,SAAS,EAAE;AACTC,IAAAA,MAAM,EAAEF,KAAK,CAACG,OAAN,CAAc,CAAd,CADC;AAETC,IAAAA,QAAQ,EAAE,GAFD;AAGTC,IAAAA,SAAS,EAAE,YAHF;AAITC,IAAAA,MAAM,EAAE;AAJC,GAD0B;AAQrCC,EAAAA,SAAS,EAAE;AACPC,IAAAA,QAAQ,EAAE,UADH;AAEPC,IAAAA,KAAK,EAAC,OAFC;AAGPC,IAAAA,GAAG,EAAC,MAHG;AAIPC,IAAAA,KAAK,EAAC;AAJC;AAR0B,CAAZ,CAAD,CAA5B;;AAgBC,MAAM7B,iBAAiB,GAAI8B,OAAD,IAAa,CAEpC;AAEA;AACF,CALD;;AAQD,eAAe,SAASC,SAAT,GAAqB;AAAA;;AAElCtC,EAAAA,SAAS,CAAC,MAAM;AACda,IAAAA,OAAO,CAAC,MAAD,CAAP;AACD,GAFQ,CAAT;AAIE,QAAM0B,OAAO,GAAGf,SAAS,EAAzB;AAEA,sBACI;AAAA,2BACA,QAAC,KAAD;AAAO,MAAA,SAAS,EAAE,CAAlB;AAAqB,MAAA,SAAS,EAAEe,OAAO,CAACb,SAAxC;AAAA,6BACA,QAAC,SAAD;AAAW,QAAA,SAAS,EAAEa,OAAO,CAACP,SAA9B;AAAyC,QAAA,EAAE,EAAC,cAA5C;AAA2D,QAAA,KAAK,EAAC,QAAjE;AAA0E,QAAA,OAAO,EAAC;AAAlF;AAAA;AAAA;AAAA;AAAA;AADA;AAAA;AAAA;AAAA;AAAA;AADA;AAAA;AAAA;AAAA;AAAA,UADJ;AAOH;;GAfuBM,S;UAMJd,S;;;KANIc,S","sourcesContent":["import React, {useEffect} from 'react'\nimport TextField from '@material-ui/core/TextField';\nimport Paper from '@material-ui/core/Paper';\nimport { makeStyles } from '@material-ui/core/styles';\n\n\n\nlet stompClient = null;\n\nconst onConnected = () => {\n\n  // Subscribing to the public topic\n  stompClient.subscribe('/topic/pubic', onMessageReceived());\n\n  // Registering user to server as a public chat user\n  stompClient.send(\"/app/addUser\", {}, JSON.stringify({ sender: \"test\",message:'JOIN' }))\n\n}\n\nconst connect = (userName) => {\n\n    userName = \"test\";\n\n    if (userName) {\n\n      const Stomp = require('stompjs')\n\n      let SockJS = require('sockjs-client')\n\n      SockJS = new SockJS('http://localhost:8080/ws')\n\n      stompClient = Stomp.over(SockJS);\n\n      console.log(stompClient);\n\n      stompClient.connect({}, onConnected, onError);\n\n    }\n  }\n\n\n  const onError = (error) => {\n    this.setState({\n      error: 'Could not connect you to the Chat Room Server. Please refresh this page and try again!'\n    })\n  }\n\nconst useStyles = makeStyles((theme) => ({\n    container: {\n      margin: theme.spacing(3),\n      minWidth: 120,\n      boxSizing: 'border-box',\n      height: '90vh'\n\n    },\n    textField: {\n        position: \"relative\",\n        float:\"right\", \n        top:\"84vh\",\n        width:'100%'\n    },\n  }));\n\n const onMessageReceived = (payload) => {\n\n    //let message = JSON.parse(payload.body);\n\n    //console.log(message);\n }\n\n\nexport default function Messaging() {\n\n  useEffect(() => {\n    connect(\"test\");\n  })\n\n    const classes = useStyles();\n\n    return (\n        <div>\n        <Paper elevation={3} className={classes.container}>\n        <TextField className={classes.textField} id=\"filled-basic\" label=\"Filled\" variant=\"filled\" />\n        </Paper>\n        </div>\n    )\n}\n"]},"metadata":{},"sourceType":"module"}