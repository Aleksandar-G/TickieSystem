[{"/home/ag/Fontys/IT/tickiesystem/MessagingApp/messaging-client-app/src/index.js":"1","/home/ag/Fontys/IT/tickiesystem/MessagingApp/messaging-client-app/src/reportWebVitals.js":"2","/home/ag/Fontys/IT/tickiesystem/MessagingApp/messaging-client-app/src/App.js":"3","/home/ag/Fontys/IT/tickiesystem/MessagingApp/messaging-client-app/src/Components/Messaging.jsx":"4","/home/ag/Fontys/IT/tickiesystem/MessagingApp/messaging-client-app/src/Components/Login.jsx":"5","/home/ag/Fontys/IT/tickiesystem/MessagingApp/messaging-client-app/src/Message.jsx":"6","/home/ag/Fontys/IT/tickiesystem/MessagingApp/messaging-client-app/src/Components/RenderMessages.jsx":"7"},{"size":500,"mtime":1610470312713,"results":"8","hashOfConfig":"9"},{"size":362,"mtime":1610470312713,"results":"10","hashOfConfig":"9"},{"size":516,"mtime":1610470312713,"results":"11","hashOfConfig":"9"},{"size":3553,"mtime":1610474791542,"results":"12","hashOfConfig":"9"},{"size":2218,"mtime":1610470312713,"results":"13","hashOfConfig":"9"},{"size":371,"mtime":1610278881934,"results":"14","hashOfConfig":"9"},{"size":807,"mtime":1610470312713,"results":"15","hashOfConfig":"9"},{"filePath":"16","messages":"17","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},"8bvuuz",{"filePath":"19","messages":"20","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},{"filePath":"21","messages":"22","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},{"filePath":"23","messages":"24","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"25","usedDeprecatedRules":"18"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"28","usedDeprecatedRules":"18"},{"filePath":"29","messages":"30","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/home/ag/Fontys/IT/tickiesystem/MessagingApp/messaging-client-app/src/index.js",[],["33","34"],"/home/ag/Fontys/IT/tickiesystem/MessagingApp/messaging-client-app/src/reportWebVitals.js",[],"/home/ag/Fontys/IT/tickiesystem/MessagingApp/messaging-client-app/src/App.js",[],"/home/ag/Fontys/IT/tickiesystem/MessagingApp/messaging-client-app/src/Components/Messaging.jsx",["35","36","37"],"import React, {useEffect,useState} from 'react'\nimport TextField from '@material-ui/core/TextField';\nimport Paper from '@material-ui/core/Paper';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Button from '@material-ui/core/Button';\nimport Grid from '@material-ui/core/Grid';\nimport RenderMessages from '../Components/RenderMessages';\n\n\nlet stompClient = null;\n\n  const onError = (error) => {\n    \n  }\n\nconst useStyles = makeStyles((theme) => ({\n    container: {\n      margin: theme.spacing(3),\n      minWidth: 120,\n      boxSizing: 'border-box',\n      height: '80vh',\n      zIndex: '-1'\n      \n\n    },\n    textField: {\n        position: \"relative\",\n        marginLeft:theme.spacing(3),\n        float:\"left\", \n        width:'75%',\n        zIndex: '1'\n    },\n    button:{\n      position: \"relative\",\n        float:\"right\", \n        marginRight:theme.spacing(3),\n        width:'15%',\n        zIndex: '1',\n        padding: theme.spacing(2)\n    },\n    div:{\n      position: \"absolute\",\n      backgroundColor: 'grey',\n      float:'right',\n      width:'100%',\n      marginRight:theme.spacing(3)\n    }\n  }));\n\n\nexport default function Messaging() {\n\n  let [messageCount, setmessageCount] = useState(0);\n  const [messages, setmessages] = useState([]);\n  const [newMessage, setNewMessage] = useState({});\n  let [username, setusername] = useState('')\n\n  \n\n\n\n  const connect = (userName) => {\n\n    userName = sessionStorage.getItem(\"user\");\n    setusername(userName);\n\n    if (userName) {\n\n      const Stomp = require('stompjs')\n\n      let SockJS = require('sockjs-client')\n\n      SockJS = new SockJS('http://localhost:8080/ws')\n\n      stompClient = Stomp.over(SockJS);\n\n      console.log(stompClient);\n\n      stompClient.connect({}, onConnected, onError);\n\n    }\n  }\n\n  const onMessageReceived = (payload) => {\n    if (payload) {\n      \n      let message = JSON.parse(payload.body);\n\n      setNewMessage(message);\n      setmessageCount(messageCount++);\n\n      let m = newMessage;\n      let a = messages;\n\n      let ah = messages;\n      ah.push(message);\n\n      ah.forEach(element => {\n        setmessages([...messages,{element}]);\n      });\n\n   \n    }\n      \n   }\n\n  const onConnected = () => {\n\n    // Subscribing to the public topic\n    stompClient.subscribe('/topic/pubic', onMessageReceived);\n  \n    // Registering user to server as a public chat user\n    stompClient.send(\"/app/addUser\", {}, JSON.stringify({ sender: sessionStorage.getItem(\"user\") ,message:'JOIN' }))\n  \n  }\n\n  const sendMessage = () => {\n    if (stompClient) {\n      let chatMessage = {\n        sender: username,\n        message: newMessage\n  \n      };\n      // send public message\n      stompClient.send(\"/app/sendMessage\", {}, JSON.stringify(chatMessage));\n\n      setNewMessage('');\n\n    }\n  }\n\n  const handleMessageChange =(event) =>{\n\n    setNewMessage(event.target.value)\n  }\n\n  useEffect(() => {\n    setusername(sessionStorage.getItem(\"user\").toString())\n    connect(username);\n\n  },[])\n\n  useEffect(() => {\n\n  }, [messageCount])\n\n  \n\n    const classes = useStyles();\n\n    return (\n        <div>\n        <Paper elevation={3} className={classes.container}>\n        <Grid container spacing={3}>\n        <RenderMessages messages={messages} />\n        </Grid>\n        </Paper>\n        <TextField onChange={(event) => handleMessageChange(event)} className={classes.textField} id=\"filled-basic\" label=\"Filled\" variant=\"filled\" />\n        <Button className={classes.button} variant=\"outlined\" color=\"primary\" onClick={() => sendMessage()}>Send</Button>\n        </div>\n    )\n}\n","/home/ag/Fontys/IT/tickiesystem/MessagingApp/messaging-client-app/src/Components/Login.jsx",["38","39"],"import React, {useState} from 'react'\nimport Button from '@material-ui/core/Button';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport TextField from '@material-ui/core/TextField';\nimport Typography from '@material-ui/core/Typography';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Container from '@material-ui/core/Container';\nimport  {Link, Redirect} from \"react-router-dom\";\nimport { BrowserRouter as Router } from \"react-router-dom\";\n\nconst useStyles = makeStyles((theme) => ({\n    paper: {\n      marginTop: theme.spacing(8),\n      display: 'flex',\n      flexDirection: 'column',\n      alignItems: 'center',\n    },\n    avatar: {\n      margin: theme.spacing(1),\n      backgroundColor: theme.palette.secondary.main,\n    },\n    form: {\n      width: '100%', // Fix IE 11 issue.\n      marginTop: theme.spacing(1),\n    },\n    submit: {\n      margin: theme.spacing(3, 0, 2),\n    },\n  }));\n  \n  export default function Login() {\n    const classes = useStyles();\n\n    const [username, setusername] = useState('')\n\n    const login = (event) => {\n        sessionStorage.setItem(\"user\",username);\n        console.log(username);\n    }\n\n    const HandleChange = (e) =>{\n      setusername(e.target.value)\n    }\n  \n    return (\n      <Container component=\"main\" maxWidth=\"xs\">\n        <CssBaseline />\n        <div className={classes.paper}>\n          <Typography component=\"h1\" variant=\"h5\">\n            Sign in\n          </Typography>\n          <form className={classes.form} noValidate>\n            <TextField\n              variant=\"outlined\"\n              margin=\"normal\"\n              required\n              fullWidth\n              id=\"email\"\n              label=\"Email Address\"\n              name=\"email\"\n              autoComplete=\"email\"\n              autoFocus\n              onChange={(e) => HandleChange(e)}\n            />\n            <Button\n              type=\"button\"\n              fullWidth\n              variant=\"contained\"\n              color=\"primary\"\n              className={classes.submit}\n              onClick={(event) => login(event)}\n            >\n            <Link to=\"/chat\"> LOGIN </Link>\n            </Button>\n          </form>\n        </div>\n      </Container>\n\n    );\n  }","/home/ag/Fontys/IT/tickiesystem/MessagingApp/messaging-client-app/src/Message.jsx",[],"/home/ag/Fontys/IT/tickiesystem/MessagingApp/messaging-client-app/src/Components/RenderMessages.jsx",[],{"ruleId":"40","replacedBy":"41"},{"ruleId":"42","replacedBy":"43"},{"ruleId":"44","severity":1,"message":"45","line":92,"column":11,"nodeType":"46","messageId":"47","endLine":92,"endColumn":12},{"ruleId":"44","severity":1,"message":"48","line":93,"column":11,"nodeType":"46","messageId":"47","endLine":93,"endColumn":12},{"ruleId":"49","severity":1,"message":"50","line":141,"column":5,"nodeType":"51","endLine":141,"endColumn":7,"suggestions":"52"},{"ruleId":"44","severity":1,"message":"53","line":8,"column":16,"nodeType":"46","messageId":"47","endLine":8,"endColumn":24},{"ruleId":"44","severity":1,"message":"54","line":9,"column":27,"nodeType":"46","messageId":"47","endLine":9,"endColumn":33},"no-native-reassign",["55"],"no-negated-in-lhs",["56"],"no-unused-vars","'m' is assigned a value but never used.","Identifier","unusedVar","'a' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'connect' and 'username'. Either include them or remove the dependency array.","ArrayExpression",["57"],"'Redirect' is defined but never used.","'Router' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"58","fix":"59"},"Update the dependencies array to be: [connect, username]",{"range":"60","text":"61"},[2967,2969],"[connect, username]"]